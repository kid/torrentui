angular
  .module('app', [
    'restangular',
    'ui.bootstrap',
    'ui.router',
    'ng-rails-csrf',
    'Devise',
    'angularFileUpload',
    'templates', 
    'app.controllers',
    'app.directives',
    'app.filters',
    'app.services'
  ])
  .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/torrents');

    $stateProvider
      .state('torrent', {
        abstract: true,
        url: '/torrents',
        views: {
          'shell@': {
            // template: '<ui-view />'
            templateUrl: 'layouts/application.html'
          }
        }, 
        data: {
          breadcrumbProxy: 'torrent.list'
        }
      })
      .state('torrent.list', {
        url: '?tab',
        templateUrl: 'torrent/list.html',
        controller: 'TorrentListCtrl',
        data: {
          displayName: 'Torrents'
        }
      })
      .state('torrent.add', {
        url: '/add',
        templateUrl: 'torrent/add.html',
        controller: 'AddTorrentCtrl'
      })
      .state('torrent.detail', {
        url: '/:torrentId',
        templateUrl: 'torrent.detail.html',
        controller: 'TorrentDetailCtrl',
        data: {
          displayName: '{{ torrent.name }}'
        },
        resolve: {
          torrent: ['$http', '$stateParams', function ($http, $stateParams) {
            return $http
              .get('/torrents/' + $stateParams.torrentId)
              .then(function (resp) {
                return resp.data;
              });
          }]
        }
      });

  }])
  .run(['Auth', function (Auth) {
    var credentials = {
      email: 'kid',
      password: 'gnzEVz'
    };

    Auth
      .login(credentials)
      .then(function(user) {
        console.log(user);
      }, function(error) {
        console.error(error);
      });
  }]);

angular.module('app.controllers', []);
angular.module('app.directives', []);
angular.module('app.filters', []);
angular.module('app.services', []);
